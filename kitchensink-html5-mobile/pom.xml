<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.as.quickstarts</groupId>
    <artifactId>jboss-as-kitchensink-html5-mobile</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>JBoss AS Quickstarts: AeroGear HTML5/Mobile</name>
    <description>An AeroGear and Java EE 6 HTML5 mobile web application for use with JBoss.</description>

    <modules>
        <module>web</module>
        <module>services</module>
    </modules>

    <url>http://jboss.org/aerogear</url>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Timestamp format for the maven.build.timestamp property -->
        <!-- You can reference property in pom.xml or filtered resources (must enable third-party plugin if using Maven < 2.1) -->

        <!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any dependencies from org.jboss.spec will have their
             version defined by this BOM -->
        <javaee6.bom.version>1.0.0.M3</javaee6.bom.version>

    </properties>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <dependencyManagement>
        <dependencies>

            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill of Materials (BOM). A BOM specifies the versions 
                of a "stack" (or a collection) of artifacts. We use this here so that we always get the correct versions of artifacts. Here we use 
                the jboss-javaee-6.0 stack (you can read this as the JBoss stack of the Java EE 6 APIs) -->

            <!--adding Hibernate Community projects including Hibernate ORM, Hibernate Search and Hibernate Validator.
            see https://github.com/jboss/jboss-bom/tree/master/jboss-javaee-6.0-with-hibernate -->
            <dependency>
               <groupId>org.jboss.bom</groupId>
               <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
               <version>${javaee6.bom.version}</version>
               <type>pom</type>
               <scope>import</scope>
            </dependency>

            <!--This BOM builds on the Java EE full profile BOM, adding Arquillian to the mix. It also provides a
            version of JUnit and TestNG recommended for use with Arquillian.
            see https://github.com/jboss/jboss-bom/tree/master/jboss-javaee-6.0-with-tools -->
            <dependency>
               <groupId>org.jboss.bom</groupId>
               <artifactId>jboss-javaee-6.0-with-tools</artifactId>
               <version>${javaee6.bom.version}</version>
               <type>pom</type>
               <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.1.1</version>
                    <configuration>
                        <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
                <!-- To use, run: mvn package jboss-as:deploy -->
                <plugin>
                    <groupId>org.jboss.as.plugins</groupId>
                    <artifactId>jboss-as-maven-plugin</artifactId>
                    <version>7.1.0.Final</version>
                </plugin>

                <plugin>
                    <groupId>com.mycila.maven-license-plugin</groupId>
                    <artifactId>maven-license-plugin</artifactId>
                    <version>1.9.0</version>
                    <configuration>
                        <header>src/etc/license.txt</header>
                        <mapping>
                            <tmpl>XML_STYLE</tmpl>
                        </mapping>
                        <strictCheck>true</strictCheck>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
